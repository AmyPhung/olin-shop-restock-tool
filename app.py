import os
from flask import Flask, request, redirect, url_for, render_template, send_from_directory
from werkzeug.utils import secure_filename
from PyPDF2 import PdfFileReader, PdfFileWriter
from shutil import copyfile
import pandas as pd
from gsheets import Sheets


# from inventory_lib import updateCSV
class Inventory:
    def __init__(self, url, filename):
        self.url = url
        self.filename = filename
        self.inventory = None
        self.update()

    def updateCSV(self):
        sheets = Sheets.from_files('keys/client_secrets.json', 'keys/storage.json')
        s = sheets.get(self.url)
        s.sheets[1].to_csv(self.filename, encoding='utf-8', dialect='excel')

    def update(self):
        self.updateCSV()
        self.inventory = pd.read_csv(self.filename)



INVENTORY_URL = 'https://docs.google.com/spreadsheets/d/1FqDo6pPHvlgrsp8z4VJyQzSa6x8cxxIfXJ09ugByXi4/edit?usp=sharing'
INVENTORY_DIR = 'output/autogenerated_inventory.csv'

inv = Inventory(INVENTORY_URL, INVENTORY_DIR)

app = Flask(__name__, static_url_path="/static")

@app.route('/', methods=['GET'])
def index():
    return render_template('index.html', inv_list=inv.inventory['Name'])

# QR Code Output Paste
# @app.route('/', methods=['POST'])
# def submit():
#     print('You entered: {}'.format(request.form['text']))
#     return render_template('index.html')
# @app.route('/click/', methods=['GET', 'POST'])#, methods=['POST', 'GET'])#, methods = ['GET'])
# def test_form():
#     if request.method == 'POST':
#         print ("box")
#         print(request.form["exampleFormControlTextarea1"])
#     return "asdf2"
#
@app.route('/', methods=['POST'])
def refreshInventory():
    print("Refreshing inventory")
    inv.update()
    return render_template('index.html', inv_list=inv.inventory['Name'])

@app.route('/action', methods=['POST'])
def handleFormData():
    print("Items selected:")
    print(request.form.getlist('item_selection'))
    return render_template('action.html')

@app.route('/pdf_down', methods=['GET'])
def pdfPage():
    return render_template('pdf_down.html')



@app.route('/download', methods=['GET'])
def downloadPdf():
    print("hello")
    return send_from_directory(directory='output', filename='autogenerated_labels.pdf')

@app.route('/upload', methods=['GET'])
def uploadFile():
    filename = "output/autogenerated_labels.pdf"
    # with f as open(filename):
    copyfile(filename, "output/autogenerated_labels2.pdf")

    return redirect(url_for('downloadPdf'))

#
#
# # Labels -----------------------------------------------------------------------
# UPLOAD_FOLDER = os.path.dirname(os.path.abspath(__file__)) + '/uploads/'
# DOWNLOAD_FOLDER = os.path.dirname(os.path.abspath(__file__)) + '/downloads/'
# ALLOWED_EXTENSIONS = {'pdf'}
#
# DIR_PATH = os.path.dirname(os.path.realpath(__file__))
# app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
# app.config['DOWNLOAD_FOLDER'] = DOWNLOAD_FOLDER
# # limit upload size upto 8mb
# app.config['MAX_CONTENT_LENGTH'] = 8 * 1024 * 1024
#
# def allowed_file(filename):
#     return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS
